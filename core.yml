---
# This script does some universal setup on the targeted machine(s).
# It installs python, creates ansible and manual maintenance users,
# and tightens SSH security settings.
- hosts: all
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: no

  vars_files:
    - vars/ssh_keys.yml

  pre_tasks:
  - name: Make sure python is installed
    raw: bash -c "test -e /usr/bin/python || (apt-get -y update && apt-get install -y python-minimal)"
    args:
      executable: /bin/sh
    register: output
    changed_when: output.stdout


  tasks:
  - name: Set up the ansible user
    include_role:
      name: admin-user-setup
    vars:
      username: 'ansible'
      passwordless_sudo: true
      user_ssh_keys: '{{ ssh_keys }}'


  - name: Set up the manual maintenance user
    include_role:
      name: admin-user-setup
    vars:
      username: 'maintenance'
      passwordless_sudo: true
      # Named differently as workaround for https://github.com/ansible/ansible/issues/8603
      user_ssh_keys: '{{ ssh_keys }}'


  - name: Install dotfiles for the maintenance user
    include_role:
      name: dotfiles
    vars:
      username: 'maintenance'


  - name: Set up SSHD
    include_role:
      name: configure-sshd

  - name: Get username of the user running the playbook
    when: remove_provision_user is defined and remove_provision_user
    become: false
    command: whoami
    register: provision_user
    changed_when: false


  - name: Remove the provisioning user if requested
    when:
      - remove_provision_user is defined
      - remove_provision_user == True
    user:
      name: '{{ provision_user.stdout }}'
      state: absent
      remove: yes
...
